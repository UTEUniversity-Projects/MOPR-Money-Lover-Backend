server:
  port: ${SPRING_SERVER_PORT:8080}
  servlet:
    context-path: ${SPRING_CONTEXT_PATH:/}

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: base
  security:
    oauth2:
      authorization server:
        issuer: ${SPRING_SERVER_URL}
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    protocol: ${MAIL_PROTOCOL}
    properties:
      mail.smtp.auth: true
      mail.smtp.ssl.enable: false
      mail.smtp.starttls.enable: true
  datasource:
    url: ${DATASOURCE_URL:jdbc:mysql://localhost:3306/db_money_lover}
    username: ${DATASOURCE_NAME:root}
    password: ${DATASOURCE_PASSWORD:123456}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect
  liquibase:
    change-log: ${LIQUIBASE_CHANGELOG:classpath:liquibase/db.changelog-master.xml}
    enabled: true
    database-change-log-table: DATABASECHANGELOG
    database-change-log-lock-table: DATABASECHANGELOGLOCK
  webflux:
    static-path-pattern: "/static/**"
  jackson:
    time-zone: UTC
  config:
    import: optional:file:.env[.properties]
  jmx:
    enabled: false
  oauth2:
    client:
      registration:
        google:
          client-id: ${GOOGLE_CLIENT_ID}
          client-secret: ${GOOGLE_CLIENT_SECRET}
          scope: openid, profile, email

springdoc:
  api-docs:
    path: ${SPRING_API_DOCS:/v3/api-docs}
  swagger-ui:
    path: ${SPRING_SWAGGER_UI:/swagger-ui.html}
    oauth2-redirect-url: ${SPRING_SERVER_URL}
    docExpansion: none

open:
  api:
    title: ${OPEN_API_TITLE}
    version: ${OPEN_API_VERSION}
    description: ${OPEN_API_DESCRIPTION}
    serverUrl: ${SPRING_SERVER_URL}
    serverName: ${OPEN_API_SERVERNAME}

recaptcha:
  site-key: ${RECAPTCHA_SITE_KEY}
  secret-key: ${RECAPTCHA_SECRET_KEY}
  verify-url: ${RECAPTCHA_VERIFY_URL}
  threshold: ${RECAPTCHA_THRESHOLD}

otp.expiry.minutes: ${OTP_EXPIRATION_MINUTES:15}
jwt.expiry.minutes: ${JWT_EXPIRATION_MINUTES:15}

logging:
  config: classpath:log4j2.xml

oauth2-config:
  access-token-expiration: ${SECURITY_ACCESS_EXPIRATION:86400000}
  refresh-token-expiration: ${SECURITY_REFRESH_EXPIRATION:2592000000}
  private-key: ${SECURITY_PRIVATE_KEY}
  public-key: ${SECURITY_PUBLIC_KEY}
  base-url: ${SPRING_SERVER_URL}
  token-uri: "/api/oauth2/token"
  authorization-uri: "/api/oauth2/authorize"
  token-introspection-uri: "/api/oauth2/introspect"
  token-revocation-uri: "/api/oauth2/revoke"
  redirect-uri: "/api/oauth2/callback"
  consent-page-uri: "/api/oauth2/consent"
  login-uri: "/login"
  logout-uri: "/logout"
  error-uri: "/error"
  callback-uri: "/home"
