server:
  port: ${PORT:8080}

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: base
  security:
    oauth2:
      authorization server:
        issuer: https://${RAILWAY_PUBLIC_DOMAIN}
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    protocol: ${MAIL_PROTOCOL}
    properties:
      mail.smtp.auth: true
      mail.smtp.ssl.enable: false
      mail.smtp.starttls.enable: true
  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  liquibase:
    change-log: classpath:liquibase/db.changelog-master.xml
    enabled: true
    database-change-log-table: DATABASECHANGELOG
    database-change-log-lock-table: DATABASECHANGELOGLOCK
  webflux:
    static-path-pattern: "/static/**"
  jackson:
    time-zone: UTC
  config:
    import: optional:file:.env[.properties]
  jmx:
    enabled: false
  oauth2:
    client:
      registration:
        google:
          client-id: ${GOOGLE_CLIENT_ID}
          client-secret: ${GOOGLE_CLIENT_SECRET}
          scope: openid, profile, email
  data.redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}
    timeout: 60000
    lettuce:
      pool:
        max-active: 10
        max-idle: 5
        min-idle: 2
        max-wait: 1000ms

cloudinary:
  cloud-name: ${CLOUDINARY_CLOUD_NAME}
  api-key: ${CLOUDINARY_API_KEY}
  api-secret: ${CLOUDINARY_API_SECRET}

file:
  max-size: 10485760 #10MB
  allowed-types:
    image: png,jpg,jpeg,gif,bmp,webp,tiff
    video: mp4,mkv,avi,mov,flv,wmv
    audio: mp3,wav,aac,ogg,flac
    document: doc,docx,pdf,txt,xls,xlsx,ppt,pptx,csv,json,xml
    archive: zip,rar,tar,gz,7z
    executable: sh

springdoc:
  api-docs:
    path: ${SPRING_API_DOCS:/v3/api-docs}
  swagger-ui:
    path: ${SPRING_SWAGGER_UI:/swagger-ui.html}
    oauth2-redirect-url: https://${RAILWAY_PUBLIC_DOMAIN}${SECURITY_REDIRECT_URI}
    docExpansion: none
    tags-sorter: alpha
    operations-sorter: alpha

open:
  api:
    title: ${OPEN_API_TITLE}
    version: ${OPEN_API_VERSION}
    description: ${OPEN_API_DESCRIPTION}
    serverUrl: https://${RAILWAY_PUBLIC_DOMAIN}
    serverName: ${OPEN_API_SERVERNAME}

recaptcha:
  site-key: ${RECAPTCHA_SITE_KEY}
  secret-key: ${RECAPTCHA_SECRET_KEY}
  verify-url: ${RECAPTCHA_VERIFY_URL}
  threshold: ${RECAPTCHA_THRESHOLD}

otp.expiry.minutes: ${OTP_EXPIRATION_MINUTES:15}
otp.redis.otp-timeout: ${OTP_REDIS_TIMEOUT:30}
jwt.expiry.minutes: ${JWT_EXPIRATION_MINUTES:15}

oauth2-config:
  access-token-expiration: ${SECURITY_ACCESS_EXPIRATION:86400000}
  refresh-token-expiration: ${SECURITY_REFRESH_EXPIRATION:2592000000}
  private-key: ${SECURITY_PRIVATE_KEY}
  public-key: ${SECURITY_PUBLIC_KEY}
  base-url: https://${RAILWAY_PUBLIC_DOMAIN}
  token-uri: "/api/oauth2/token"
  authorization-uri: "/api/oauth2/authorize"
  token-introspection-uri: "/api/oauth2/introspect"
  token-revocation-uri: "/api/oauth2/revoke"
  redirect-uri: "/api/oauth2/callback"
  consent-page-uri: "/api/oauth2/consent"
  login-uri: "/login"
  logout-uri: "/logout"
  error-uri: "/error"
  callback-uri: "/home"
