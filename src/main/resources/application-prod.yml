server:
  port: ${PORT:8080}
  servlet:
    session:
      timeout: ${SESSION_TIMEOUT:30m}

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: base
  security:
    oauth2:
      authorizationserver:
        issuer: https://${SERVER_PUBLIC_DOMAIN}
  session:
    redis:
      namespace: com-mobile-api
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    protocol: ${MAIL_PROTOCOL}
    properties:
      mail.smtp.auth: true
      mail.smtp.ssl.enable: false
      mail.smtp.starttls.enable: true
  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  liquibase:
    change-log: classpath:liquibase/db.changelog-master.xml
    enabled: true
    database-change-log-table: DATABASECHANGELOG
    database-change-log-lock-table: DATABASECHANGELOGLOCK
  webflux:
    static-path-pattern: "/static/**"
  jackson:
    time-zone: UTC
  config:
    import: optional:file:.env[.properties]
  oauth2:
    client:
      registration:
        google:
          client-id: ${GOOGLE_CLIENT_ID}
          client-secret: ${GOOGLE_CLIENT_SECRET}
          scope: openid, profile, email
  data.redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}
    timeout: ${REDIS_TIMEOUT}
    lettuce:
      pool:
        max-active: 10
        max-idle: 5
        min-idle: 2
        max-wait: 1000ms

cloudinary:
  cloud-name: ${CLOUDINARY_CLOUD_NAME}
  api-key: ${CLOUDINARY_API_KEY}
  api-secret: ${CLOUDINARY_API_SECRET}

file:
  max-size: 524288 #size 512KB
  allowed-types:
    image: png,jpg,jpeg,gif,bmp,webp,tiff,icon,svg
    video: mp4,mkv,avi,mov,flv,wmv
    audio: mp3,wav,aac,ogg,flac
    document: doc,docx,pdf,txt,xls,xlsx,ppt,pptx,csv,json,xml
    archive: zip,rar,tar,gz,7z

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    oauth2-redirect-url: https://${SERVER_PUBLIC_DOMAIN}/swagger-ui/oauth2-redirect.html
    docExpansion: none
    tags-sorter: alpha
    operations-sorter: alpha

open:
  api:
    title: Money Lover API Documentation
    version: v1.1.0
    description: API documentation for Money Lover
    serverUrl: https://${SERVER_PUBLIC_DOMAIN}
    serverName: Server Test

logging:
  level:
    root: WARN
    org.springframework: WARN
#  config: classpath:log4j2-prod.xml

recaptcha:
  site-key: ${RECAPTCHA_SITE_KEY}
  api-key: ${RECAPTCHA_API_KEY}
  project-id: ${RECAPTCHA_PROJECT_ID}
  threshold: ${RECAPTCHA_THRESHOLD}

otp.expiry.minutes: 10
otp.redis.otp-timeout.minutes: 15
jwt.expiry.minutes: 10
redis.cookie.ttl.days: 30

oauth2-config:
  access-token-expiration: ${SECURITY_ACCESS_EXPIRATION:86400000}
  refresh-token-expiration: ${SECURITY_REFRESH_EXPIRATION:2592000000}
  private-key: ${SECURITY_PRIVATE_KEY}
  public-key: ${SECURITY_PUBLIC_KEY}
  base-url: https://${SERVER_PUBLIC_DOMAIN}
  token-uri: "/api/oauth2/token"
  authorization-uri: "/api/oauth2/authorize"
  token-introspection-uri: "/api/oauth2/introspect"
  token-revocation-uri: "/api/oauth2/revoke"
  redirect-uri: "/api/oauth2/callback"
  consent-page-uri: "/api/oauth2/consent"
  login-uri: "/login"
  logout-uri: "/logout"
  error-uri: "/error"
  callback-uri: "/home"
